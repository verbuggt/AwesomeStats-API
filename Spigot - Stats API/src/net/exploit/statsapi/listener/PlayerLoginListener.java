package net.exploit.statsapi.listener;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.UUID;
import java.util.function.Consumer;
import java.util.logging.Level;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerLoginEvent;

import net.exploit.statsapi.main.StatsAPI;
import net.exploit.statsapi.mysql.MySQL;
import net.exploit.statsapi.util.UUIDFetcher;

public class PlayerLoginListener implements Listener {
	
	private MySQL mysql;
	
	public PlayerLoginListener() {
		this.mysql = StatsAPI.getApi().getMySQL();
	}

	@EventHandler
	private void onLogin(PlayerLoginEvent e) {
		Player p = e.getPlayer();
		if (!exists(p.getUniqueId()))
			createPlayer(p.getUniqueId(), p.getName());
		else
			updateUser(p);
	}

	private void createPlayer(UUID uniqueId, String name) {
		mysql.updateSynchronously("INSERT INTO users(uuid, name) VALUES('" + uniqueId.toString() + "', '" + name + "');");
		checkDuplicates(name, uniqueId);
	}

	// update playername
	private void updateUser(Player p) {
		mysql.updateSynchronously("UPDATE users SET name='" + p.getName() + "' WHERE uuid='" + p.getUniqueId().toString() + "'");
		checkDuplicates(p.getName(), p.getUniqueId());
	}

	// Async inconsistency-check
	private void checkDuplicates(String name, UUID excludedUuid) {
		mysql.query("SELECT uuid FROM users WHERE name='" + name + "' AND NOT uuid='" + excludedUuid.toString() + "';", new Consumer<ResultSet>() {
			@Override
			public void accept(ResultSet rs) {
				try {
					while (rs.next()) {
						String uuid = rs.getString("uuid");
						UUIDFetcher.getName(uuid, new Consumer<String>() {
							@Override
							public void accept(String name) {
								mysql.update("UPDATE users SET name='" + name + "' WHERE uuid='" + uuid + "'");
								Bukkit.getLogger().log(Level.FINE, "Inconsistent Data fixed.");
							}
						});
					}
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		});
	}

	private boolean exists(UUID uniqueId) {
		try {
			ResultSet rs = mysql.query("SELECT name FROM users WHERE uuid='" + uniqueId + "';");
			if (rs.next())
				return true;
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return false;
	}

}

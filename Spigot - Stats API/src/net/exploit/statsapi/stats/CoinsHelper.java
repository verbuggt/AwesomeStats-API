package net.exploit.statsapi.stats;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.UUID;
import java.util.function.Consumer;

import net.exploit.statsapi.main.StatsAPI;

public class CoinsHelper {

    public static int getCoins(UUID uuid) {
        if (uuid != null)
            try {
                ResultSet rs = StatsAPI.getApi().getMySQL().query("SELECT coins FROM coins WHERE uuid='" + uuid.toString() + "';");
                if (rs != null && rs.next())
                    return rs.getInt("coins");
            } catch (SQLException e) {
                e.printStackTrace();
            }
        return 0;
    }

    public static void getCoinsAsynchronously(UUID uuid, Consumer<Integer> consumer) {
        if (uuid != null)
            StatsAPI.getApi().getMySQL().query("SELECT coins FROM coins WHERE uuid='" + uuid.toString() + "'", rs -> {
                try {
                    if (rs != null && rs.next())
                        consumer.accept(rs.getInt("coins"));
                    else
                        consumer.accept(0);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            });
    }

    public static void setCoins(UUID uuid, int coins) {
        if (StatsAPI.getApi().getSaveStats())
            if (uuid != null)
                StatsAPI.getApi().getMySQL().update("UPDATE coins SET coins=" + coins + " WHERE uuid='" + uuid.toString() + "';");
    }

    public static void addCoins(UUID uuid, int coinsToAdd) {
        if (StatsAPI.getApi().getSaveStats())
            if (uuid != null)
                StatsAPI.getApi().getMySQL().update("UPDATE coins SET coins=coins +" + coinsToAdd + " WHERE uuid='" + uuid.toString() + "';");
    }

    public static boolean hasCoins(UUID uuid, int coins) {
        return getCoins(uuid) >= coins;
    }

}
